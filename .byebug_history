c
cc
c
field
c
expect(page).to have_field('post_groups_attributes_0_fields_attributes_0_file')
      expect(page).to have_field('post_fields_attributes_0_value')
      expect(page).to have_field('post_groups_attributes_0_fields_attributes_0_value')
c
 expect(page).to have_field('post_groups_attributes_0_fields_attributes_0_value', with: '12:00 PM')
c
field.file.url
field.file
field
c
find('.form-control.bpcf-editor').set('o')
find('.form-control.bpcf-editor')
find('.form-control.bpcf-editor)
c
find('.post_groups_attributes_0_fields_attributes_0_value', visible: false)
find('.post_groups_attributes_0_fields_attributes_0_valu')
      expect(page).to have_selector('post_groups_attributes_0_fields_attributes_0_value')
find('.      expect(page).to have_selector('post_groups_attributes_0_fields_attributes_0_value')')
      select "Bananas", from: 'select#post_groups_attributes_0_fields_attributes_0_value'
c
next
c
 expect(page).to have_content "February"
c
find('#post_title').click
find('div#post_content').click
c
find('.slot.flatpickr-day', text: '16').click
c
find('c#post_content').click
find('#post_content').click
find('#post-content').click
find('#post-content;).click
find('#post-content").click
find('.flatpickr-am-pm', text: 'PM').click
find('#post_groups_attributes_0_fields_attributes_0_label').click
find('.slot.flatpickr-day', text: '12').click
find('.slot.flatpickr-day', text: '16').click
find('#post_groups_attributes_0_fields_attributes_0_value').click
find('body').click
find('.slot.flatpickr-day', text: '16').click
c
file.url
file
c
file.url
file
c
file.url
file
c
BpCustomFields::FieldTemplate.all
BpCustomFields::GroupTemplate.all
BpCustomFields::Group.all
BpCustomFields::Group
BpCustomFields::AbstractResource.first.new_groups_available?
BpCustomFields::AbstractResource.first.update_custom_field_groups
BpCustomFields::AbstractResource.first.groups
BpCustomFields::AbstractResource.first
BpCustomFields::AbstractResource.all.each(&:update_custom_field_groups)
c
BpCustomFields::AbstractResource.all.map(&:groups).flatten
BpCustomFields::AbstractResource.all.map(&:groups)
c
@abstract_resources.map(&:groups).flatten.none?
@abstract_resources.map(&:groups).none?
@abstract_resources.map(&:groups)
c
@abstract_resources.map(&:groups).any?
@abstract_resources.map(&:groups)
@abstract_resources.none?
@abstract_resources.non?
@abstract_resources
c
recipe.groups
group.persisted?
group
c
group_template.errors
group_template.valid?
group_template.valud?
group_template
group
c
recipe.groups
group
c
group.valid?
group
c
@abstract_resources.first.groups
@abstract_resources.first.group_templates
c
@abstract_resources.first.group_templates
@abstract_resources.first.group_templats
@abstract_resources.first.group_template
@abstract_resources.first.groups
@abstract_resources.first
@abstract_resources.map(&:groups)
@abstract_resources.map
@abstract_resources
c
recipe.groups.first
recipe.groups.first.save
recipe.groups.first
recipe.groups.first.valid?
recipe.groups.first.persisted?
recipe.groups.persisted?
recipe.groups
recipe
c
field_type
c
rspec spec/models/bp_custom_fields/field_spec.rb 
BpCustomFields::Field.allc
BpCustomFields::Field.all
c
@post.custom_fields
c
@name_field.group
@name_field.groups
@name_field.group
@name_field
@post.custom_fields
@post.fields
@post
c
self.groups.first.fields
self.groups
self
next
field.group
field
exit
name_field.valid?
name_field.errors
c
BpCustomFields::ApplicationController.new.has_layout
BpCustomFields::ApplicationController.new.default_layout
BpCustomFields::ApplicationController.newlayout
BpCustomFields::ApplicationController.layout
BpCustomFields::ApplicationController.default_layout
BpCustomFields::ApplicationController.layout
BpCustomFields::ApplicationController.layou
BpCustomFields::ApplicationController.layout "a"
BpCustomFields::ApplicationController.layout
BpCustomFields::ApplicationController
BpCustomFields::ApplicationController.
ApplicationController
a = BpCustomFields::ApplicationController.new
c
find('form input[type="submit"]')
c
q
all('a').map(&:text)
all('a', text: "+Add Subfield")
all('a', text: "+ Add Subfield")
all('a', text: "Add Subfield")
all('a')
sub_link
sub_link = all('a', text: "Add Subfield")
c
x
xc
cx
c
next
q
params
params[params
params
c
group.fields.first.child
group.fields.first.children.size
group.fields.first.children
group.fields.first.field_type
group.fields.first
group.fields
group
next
container_field.container?
container_field
next
field.field_type
field
q
y
q
c
flex.children.last.field_template
flex.children.last
flex.children.last.children
flex.children.last.fields
flex.children.last.field_type
flex.children
flex = group.fields.first
flex.c
flex.childrne
flex = group.fields.first.field_type
group.fields.first.field_type
group.fields.field_type
group.fields
group.children
group
c
group.fields.first.children.first.children
group.fields.first.children.first.field_type.children
group.fields.first.children.first.field_type
group.fields.first.children.first
group.fields.first.field_type
group.fields.first
group.fields
group
c
x
buckets.sub_groups.first.fields.first.name
buckets.sub_groups.first.fields.size
buckets.sub_groups.first.fields
buckets.sub_groups
buckets.groups
buckets.children
buckets.field_type
buckets
c
last_field.value
last_field.text
last_field
c
continue
children.any?(&:persisted?)
children.persisted?
children.persisted
children
c
has_children?
children
continue
children
children.any?
continue
next
children.any?
children
exit
c
continue
value
continue
self.field_type
self
self.chooseable?
